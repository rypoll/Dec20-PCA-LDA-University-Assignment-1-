plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend(1,1.5,c("Blue Female","Blue Male","Orange Female","Orange Male"),
pch=c(15:18),col=c(2:5))
points(predict(columntrain.lda,columntest)$x,pch=3)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend(c("Blue Female","Blue Male","Orange Female","Orange Male"),
pch=c(15:18),col=c(2:5))
points(predict(columntrain.lda,columntest)$x,pch=3)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend(2,1.5,c("Blue Female","Blue Male","Orange Female","Orange Male"),
pch=c(15:18),col=c(2:5))
points(predict(columntrain.lda,columntest)$x,pch=3)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend(2,-1.5,c("Blue Female","Blue Male","Orange Female","Orange Male"),
pch=c(15:18),col=c(2:5))
points(predict(columntrain.lda,columntest)$x,pch=3)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend(2,0,c("Blue Female","Blue Male","Orange Female","Orange Male"),
pch=c(15:18),col=c(2:5))
points(predict(columntrain.lda,columntest)$x,pch=3)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend(1,-0.5,c("Blue Female","Blue Male","Orange Female","Orange Male"),
pch=c(15:18),col=c(2:5))
points(predict(columntrain.lda,columntest)$x,pch=3)
?points
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend(1,-0.5,c("Blue Female","Blue Male","Orange Female","Orange Male"),
pch=c(15:18),col=c(2:5))
points(predict(columntrain.lda,columntest)$x,pch=3)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
gptrain
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend(1,-0.5,c("Blue Female","Blue Male","Orange Female","Orange Male"),
pch=c(15:18),col=c(2:5))
points(predict(columntrain.lda,columntest)$x,pch=3)
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
gptrain
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend(1,-0.5,c("Burma","Thailand","Cambodia"),
pch=c(15:18),col=c(2:5), inset=c(-0.15,0), xpd=TRUE)
points(predict(columntrain.lda,columntest)$x,pch=3)
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend("bottomleft",c("Burma","Thailand","Cambodia"),
pch=c(15:18),col=c(2:5), inset=c(-0.15,0), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=3)
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend("bottomright",c("Burma","Thailand","Cambodia"),
pch=c(15:18),col=c(2:5), inset=c(-0.15,0), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=3)
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend("bottomright",c("Burma","Thailand","Cambodia"),
pch=c(15:18),col=c(2:5), inset=c(-0.5,0), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=3)
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend("bottomright",c("Burma","Thailand","Cambodia"),
pch=c(15:18),col=c(2:5), inset=c(0.5,0), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=3)
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend("bottomright",c("Burma","Thailand","Cambodia"),
pch=c(15:18),col=c(2:5), inset=c(0.5,5), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=3)
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
legend("bottomright",c("Burma","Thailand","Cambodia"),
pch=c(15:18),col=c(2:5), inset=c(0.5,2), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=3)
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend("bottomright",c("Burma","Thailand","Cambodia"),
pch=c(15:18),col=c(2:5), inset=c(0.5,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=3)
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend("bottomright",c("Burma","Thailand","Cambodia"),
pch=c(15:18),col=c(2:5), inset=c(1.5,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=3)
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend("bottomright",c("Burma","Thailand","Cambodia"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=3)
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend("bottomright",c("Burma","Thailand","Cambodia"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=3, mar=c(7,7,7,7), cex = 1)
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
gptest
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend("bottomright",c("Burma","Thailand","Cambodia"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Crabs: LD1 v LD2")
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
cr.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
cr.pr<-predict(cr.ld,z)$class
contour(x,y,matrix(cr.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
cr.ld
cr.pr
cr.pr<-predict(cr.ld,z)$class
x
y
z
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2")
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2" ,ylim=(0,3))
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2", ylim=(-3:3))
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2", ylim=(0:3))
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2")
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2", ylim=c(-3,3))
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
color <- 4
diameter <- 20
thickness <- 5
angle <- 32.5
cut <- 3
clarity <- 0.42
caratwt <- 0.9
newdt <- data.frame(color, diameter, thickness, angle, cut, clarity, caratwt)
newdt
columntest
color <- 4
diameter <- 20
thickness <- 5
angle <- 32.5
cut <- 3
clarity <- 0.42
caratwt <- 0.9
newdt <- data.frame(color, diameter, thickness, angle, cut, clarity, caratwt)
prediction2 <- predict(columntrain.lda, newdt)$class
prediction2
prediction2 <- predict(columntrain.lda, newdt)
prediction2
prediction[1]
prediction[2]
prediction[3]
prediction[4]
prediction[5]
prediction[6]
prediction[7]
prediction$posterior
prediction2$posterior
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2", ylim=c(-3,3))
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
points(prediction2$x[1],prediction2$x[2],pch=3)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2", ylim=c(-3,3))
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
points(prediction2$x[1],prediction2$x[2],pch=10)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2", ylim=c(-3,3))
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
points(prediction2$x[1],prediction2$x[2],pch=8)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2", ylim=c(-3,3))
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
points(prediction2$x[1],prediction2$x[2],pch=22, bg="yellow")
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2", ylim=c(-3,3))
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
points(prediction2$x[1],prediction2$x[2],pch=25, bg="pink")
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2", ylim=c(-3,3))
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
points(prediction2$x[1],prediction2$x[2],pch=25, bg="pink", cex=2)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2", ylim=c(-3,3))
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
points(prediction2$x[1],prediction2$x[2],pch=25, bg="purple", cex=1.5)
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2", ylim=c(-3,3))
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
points(prediction2$x[1],prediction2$x[2],pch=25, bg="orange", cex=1.5)
library(MASS)
detach(rubies)
attach(rubies)
columntrainCV.lda<-lda(rubies[4:10],rubies$where, CV=TRUE)
tab <- table(rubies$where, columntrainCV.lda$class)
conCV1 <- rbind(tab[1, ]/sum(tab[1, ]), tab[2, ]/sum(tab[2, ]), tab[3, ]/sum(tab[3, ]) )
dimnames(conCV1) <- list(Actual = c("Burma", "Thailand", "Cambodia"), "Predicted (Country)" = c("Burma", "Thailand", "Cambodia"))
print(round(conCV1, 3))
accur <- (tab[1,1] + tab[2,2] + tab[3,3])/sum(tab)
accur
ind1<-sample(2,length(rubies$where[rubies$where==1]),replace=TRUE,prob=c(0.70,0.30))
ind2<-sample(2,length(rubies$where[rubies$where==2]),replace=TRUE,prob=c(0.70,0.30))
ind3<-sample(2,length(rubies$where[rubies$where==3]),replace=TRUE,prob=c(0.70,0.30))
ind <- c(ind1, ind2, ind3)
columntrain<-rubies[ind==1, 4:10]
columntest<-rubies[ind==2, 4:10]
gptrain <- rubies[ind==1,]$where
gptest <- rubies[ind==2,]$where
detach(columntrain)
attach(columntrain)
columntrain.lda<-lda(columntrain,gptrain)
prediction <- predict(columntrain.lda, columntest)$class
tab <- table(gptest, prediction)
con <- rbind(tab[1, ]/sum(tab[1, ]), tab[2, ]/sum(tab[2, ]), tab[3, ]/sum(tab[3, ]) )
dimnames(con) <- list(Actual = c("Burma", "Thailand", "Cambodia"), "Predicted (Country)" = c("Burma", "Thailand", "Cambodia"))
print(round(con, 3))
accur <- (tab[1,1] + tab[2,2] + tab[3,3])/sum(tab)
accur
library(MASS)
detach(rubies)
attach(rubies)
columntrainCV.lda<-lda(rubies[4:10],rubies$where, CV=TRUE)
tab <- table(rubies$where, columntrainCV.lda$class)
conCV1 <- rbind(tab[1, ]/sum(tab[1, ]), tab[2, ]/sum(tab[2, ]), tab[3, ]/sum(tab[3, ]) )
dimnames(conCV1) <- list(Actual = c("Burma", "Thailand", "Cambodia"), "Predicted (Country)" = c("Burma", "Thailand", "Cambodia"))
print(round(conCV1, 3))
accur <- (tab[1,1] + tab[2,2] + tab[3,3])/sum(tab)
## now use the train test method, and use predict
accur
ind1<-sample(2,length(rubies$where[rubies$where==1]),replace=TRUE,prob=c(0.70,0.30))
ind2<-sample(2,length(rubies$where[rubies$where==2]),replace=TRUE,prob=c(0.70,0.30))
ind3<-sample(2,length(rubies$where[rubies$where==3]),replace=TRUE,prob=c(0.70,0.30))
ind <- c(ind1, ind2, ind3)
columntrain<-rubies[ind==1, 4:10]
columntest<-rubies[ind==2, 4:10]
gptrain <- rubies[ind==1,]$where
gptest <- rubies[ind==2,]$where
detach(columntrain)
attach(columntrain)
columntrain.lda<-lda(columntrain,gptrain)
prediction <- predict(columntrain.lda, columntest)$class
tab <- table(gptest, prediction)
con <- rbind(tab[1, ]/sum(tab[1, ]), tab[2, ]/sum(tab[2, ]), tab[3, ]/sum(tab[3, ]) )
dimnames(con) <- list(Actual = c("Burma", "Thailand", "Cambodia"), "Predicted (Country)" = c("Burma", "Thailand", "Cambodia"))
print(round(con, 3))
accur <- (tab[1,1] + tab[2,2] + tab[3,3])/sum(tab)
accur
plot(predict(columntrain.lda)$x[,1:2],pch=gptrain+14,col=gptrain+1,main="Rubies: LD1 v LD2", ylim=c(-3,3))
legend("bottomright",c("Burma - 1","Thailand - 2","Cambodia - 3"),
pch=c(15:18),col=c(2:5), inset=c(0,1), xpd=TRUE , bty="n", )
points(predict(columntrain.lda,columntest)$x,pch=as.character(gptest))
x<-seq(-7,7,0.02)
y<-seq(-5,5,0.02)
z<-as.matrix(expand.grid(x,y))
m<-length(x)
n<-length(y)
col.ld<-lda(predict(columntrain.lda)$x[,1:2],gptrain)
col.pr<-predict(col.ld,z)$class
contour(x,y,matrix(col.pr,m,n),levels=c(1.5:3.5),add=TRUE,d=FALSE)
points(prediction2$x[1],prediction2$x[2],pch=25, bg="turquoise", cex=1.5)
prediction
ind
ind <- c(2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1 ,2 ,1 ,2 ,1 ,1 ,1 ,1 ,2 ,1 ,1 ,1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1 ,1, 1, 1, 2, 1,)
ind <- c(2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1 ,2 ,1 ,2 ,1 ,1 ,1 ,1 ,2 ,1 ,1 ,1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1 ,1, 1, 1, 2, 1)
columntrain<-rubies[ind==1, 4:10]
columntest<-rubies[ind==2, 4:10]
gptrain <- rubies[ind==1,]$where
gptest <- rubies[ind==2,]$where
detach(columntrain)
attach(columntrain)
columntrain.lda<-lda(columntrain,gptrain)
prediction <- predict(columntrain.lda, columntest)$class
prediction <- c(1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 3, 3, 3, 3, 3, 3)
tab <- table(gptest, prediction)
con <- rbind(tab[1, ]/sum(tab[1, ]), tab[2, ]/sum(tab[2, ]), tab[3, ]/sum(tab[3, ]) )
dimnames(con) <- list(Actual = c("Burma", "Thailand", "Cambodia"), "Predicted (Country)" = c("Burma", "Thailand", "Cambodia"))
print(round(con, 3))
accur <- (tab[1,1] + tab[2,2] + tab[3,3])/sum(tab)
accur
prediction2$posterior
columntrain
devtools::install_github("laresbernardo/lares")
library(lares)
devtools::install_github("laresbernardo/lares")
library(lares)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
